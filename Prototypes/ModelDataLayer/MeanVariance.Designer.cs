//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MeanVarianceModel", "FK_Corelation_Markets", "Markets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModelDataLayer.Market), "Corelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModelDataLayer.Corelation), true)]
[assembly: EdmRelationshipAttribute("MeanVarianceModel", "FK_Corelation_Markets1", "Markets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModelDataLayer.Market), "Corelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModelDataLayer.Corelation), true)]

#endregion

namespace ModelDataLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MeanVarianceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MeanVarianceEntities object using the connection string found in the 'MeanVarianceEntities' section of the application configuration file.
        /// </summary>
        public MeanVarianceEntities() : base("name=MeanVarianceEntities", "MeanVarianceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MeanVarianceEntities object.
        /// </summary>
        public MeanVarianceEntities(string connectionString) : base(connectionString, "MeanVarianceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MeanVarianceEntities object.
        /// </summary>
        public MeanVarianceEntities(EntityConnection connection) : base(connection, "MeanVarianceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Corelation> Corelations
        {
            get
            {
                if ((_Corelations == null))
                {
                    _Corelations = base.CreateObjectSet<Corelation>("Corelations");
                }
                return _Corelations;
            }
        }
        private ObjectSet<Corelation> _Corelations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Market> Markets
        {
            get
            {
                if ((_Markets == null))
                {
                    _Markets = base.CreateObjectSet<Market>("Markets");
                }
                return _Markets;
            }
        }
        private ObjectSet<Market> _Markets;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Corelations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCorelations(Corelation corelation)
        {
            base.AddObject("Corelations", corelation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Markets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarkets(Market market)
        {
            base.AddObject("Markets", market);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeanVarianceModel", Name="Corelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Corelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Corelation object.
        /// </summary>
        /// <param name="iD1">Initial value of the ID1 property.</param>
        /// <param name="iD2">Initial value of the ID2 property.</param>
        /// <param name="corelation1">Initial value of the Corelation1 property.</param>
        public static Corelation CreateCorelation(global::System.Int32 iD1, global::System.Int32 iD2, global::System.Double corelation1)
        {
            Corelation corelation = new Corelation();
            corelation.ID1 = iD1;
            corelation.ID2 = iD2;
            corelation.Corelation1 = corelation1;
            return corelation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID1
        {
            get
            {
                return _ID1;
            }
            set
            {
                if (_ID1 != value)
                {
                    OnID1Changing(value);
                    ReportPropertyChanging("ID1");
                    _ID1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID1");
                    OnID1Changed();
                }
            }
        }
        private global::System.Int32 _ID1;
        partial void OnID1Changing(global::System.Int32 value);
        partial void OnID1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID2
        {
            get
            {
                return _ID2;
            }
            set
            {
                if (_ID2 != value)
                {
                    OnID2Changing(value);
                    ReportPropertyChanging("ID2");
                    _ID2 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID2");
                    OnID2Changed();
                }
            }
        }
        private global::System.Int32 _ID2;
        partial void OnID2Changing(global::System.Int32 value);
        partial void OnID2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Corelation1
        {
            get
            {
                return _Corelation1;
            }
            set
            {
                if (_Corelation1 != value)
                {
                    OnCorelation1Changing(value);
                    ReportPropertyChanging("Corelation1");
                    _Corelation1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Corelation1");
                    OnCorelation1Changed();
                }
            }
        }
        private global::System.Double _Corelation1;
        partial void OnCorelation1Changing(global::System.Double value);
        partial void OnCorelation1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeanVarianceModel", "FK_Corelation_Markets", "Markets")]
        public Market Market
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("MeanVarianceModel.FK_Corelation_Markets", "Markets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("MeanVarianceModel.FK_Corelation_Markets", "Markets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Market> MarketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("MeanVarianceModel.FK_Corelation_Markets", "Markets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Market>("MeanVarianceModel.FK_Corelation_Markets", "Markets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeanVarianceModel", "FK_Corelation_Markets1", "Markets")]
        public Market Market1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("MeanVarianceModel.FK_Corelation_Markets1", "Markets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("MeanVarianceModel.FK_Corelation_Markets1", "Markets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Market> Market1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Market>("MeanVarianceModel.FK_Corelation_Markets1", "Markets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Market>("MeanVarianceModel.FK_Corelation_Markets1", "Markets", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeanVarianceModel", Name="Market")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Market : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Market object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="variance">Initial value of the Variance property.</param>
        /// <param name="expected">Initial value of the Expected property.</param>
        public static Market CreateMarket(global::System.Int32 id, global::System.String name, global::System.Double variance, global::System.Double expected)
        {
            Market market = new Market();
            market.ID = id;
            market.Name = name;
            market.Variance = variance;
            market.Expected = expected;
            return market;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Variance
        {
            get
            {
                return _Variance;
            }
            set
            {
                OnVarianceChanging(value);
                ReportPropertyChanging("Variance");
                _Variance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Variance");
                OnVarianceChanged();
            }
        }
        private global::System.Double _Variance;
        partial void OnVarianceChanging(global::System.Double value);
        partial void OnVarianceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Expected
        {
            get
            {
                return _Expected;
            }
            set
            {
                OnExpectedChanging(value);
                ReportPropertyChanging("Expected");
                _Expected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Expected");
                OnExpectedChanged();
            }
        }
        private global::System.Double _Expected;
        partial void OnExpectedChanging(global::System.Double value);
        partial void OnExpectedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeanVarianceModel", "FK_Corelation_Markets", "Corelation")]
        public EntityCollection<Corelation> Corelations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Corelation>("MeanVarianceModel.FK_Corelation_Markets", "Corelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Corelation>("MeanVarianceModel.FK_Corelation_Markets", "Corelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeanVarianceModel", "FK_Corelation_Markets1", "Corelation")]
        public EntityCollection<Corelation> Corelations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Corelation>("MeanVarianceModel.FK_Corelation_Markets1", "Corelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Corelation>("MeanVarianceModel.FK_Corelation_Markets1", "Corelation", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
